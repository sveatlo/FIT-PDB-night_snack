# Build dev image first
FROM {{ BUILDIMAGE }} as builder

# install system dependencies
RUN apt update -y
RUN apt install -y unzip
# prepare protoc
WORKDIR /tmp
ENV PROTOC_ZIP=protoc-3.17.2-linux-x86_64.zip
RUN curl -OL https://github.com/protocolbuffers/protobuf/releases/download/v3.17.2/$PROTOC_ZIP
RUN unzip -o $PROTOC_ZIP -d /usr/local 'bin/protoc'
RUN unzip -o $PROTOC_ZIP -d /usr/local 'include/*'

# prepare project
WORKDIR /app
# prepare go dependencies
COPY tools.go .
COPY go.mod .
COPY go.sum .
RUN go mod download
RUN cat tools.go | grep _ | awk -F'"' '{print $2}' | xargs -tI % go install %

ENV GOOS {{ OS }}
ENV GOARCH {{ ARCH }}
ENV ENV dev
# copy files
COPY . .
# Build the application
RUN ["make", "proto"]
RUN ["make", "build-{{ CMD_NAME }}"]

# Build prod image
FROM {{ RUNIMAGE }} as runner
# RUN apk --no-cache add bash
# RUN apk --no-cache add ca-certificates && update-ca-certificates
WORKDIR /app/
COPY --from=builder /app/{{ CMD_BIN_PATH }} ./{{ CMD_BIN_FILE }}
COPY --from=builder /app/config ./config
# set volume
VOLUME ["/app/config"]
# main command
CMD ["./{{ CMD_BIN_FILE }}", "-config", "./config/{{ CMD_CONFIG_FILENAME }}"]
